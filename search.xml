<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>前端项目部署问题记录</title>
    <url>/2023/10/05/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h3 id="前端项目部署问题记录"><a href="#前端项目部署问题记录" class="headerlink" title="前端项目部署问题记录"></a>前端项目部署问题记录</h3><h4 id="1、需要修改vue-config-js文件"><a href="#1、需要修改vue-config-js文件" class="headerlink" title="1、需要修改vue-config.js文件"></a>1、需要修改vue-config.js文件</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">assetsDir</span>: <span class="string">&quot;static&quot;</span>,</span><br><span class="line">  <span class="attr">parallel</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">publicPath</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">  <span class="attr">transpileDependencies</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">lintOnSave</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="attr">host</span>: <span class="string">&quot;localhost&quot;</span>,</span><br><span class="line">    <span class="attr">port</span>: <span class="number">8080</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h4 id="2、插件-openapi-typescript-codegen-使用中出现的一些问题"><a href="#2、插件-openapi-typescript-codegen-使用中出现的一些问题" class="headerlink" title="2、插件 openapi-typescript-codegen 使用中出现的一些问题"></a>2、插件 openapi-typescript-codegen 使用中出现的一些问题</h4><ul>
<li>每一次重新生成文档后，都需要去 core&#x2F;OpenAPI.ts 文件中修改 WITH_CREDENTIALS, 将值由 false 改为 true。不修改的话在每次提交请求时不会携带 cookie</li>
<li>部署时需要将 core&#x2F;OpenAPI.ts 文件中的 BASE 修改为后端服务的地址，填写具体地址不要使用localhost，同时需要在防火墙中开放后端端口。</li>
</ul>
<h4 id="3、nginx部署需要添加如下配置"><a href="#3、nginx部署需要添加如下配置" class="headerlink" title="3、nginx部署需要添加如下配置"></a>3、nginx部署需要添加如下配置</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">  server &#123;</span><br><span class="line">      listen <span class="number">8080</span>; # 监听的端口号</span><br><span class="line">      server_name afool.<span class="property">site</span>; # 服务器名称</span><br><span class="line">      root /www/wwwroot/dist; # 项目打包生成的静态文件所在路径</span><br><span class="line"></span><br><span class="line">      location / &#123;</span><br><span class="line">        root /www/wwwroot/dist;</span><br><span class="line">        index index.<span class="property">html</span> index.<span class="property">htm</span>;</span><br><span class="line">        try_files $uri $uri/ /index.<span class="property">html</span>; #解决路由刷新时出现<span class="number">404</span>的问题</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>OJ在线判题系统</title>
    <url>/2023/10/05/OJ%E5%9C%A8%E7%BA%BF%E5%88%A4%E9%A2%98%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h2 id="需求分析-功能描述"><a href="#需求分析-功能描述" class="headerlink" title="需求分析&#x2F;功能描述"></a>需求分析&#x2F;功能描述</h2><ul>
<li>用户模块</li>
</ul>
<p>登录	<br><img src="https://cdn.nlark.com/yuque/__puml/03d4ce22e1b618863b284c5ffb6f70b5.svg#lake_card_v2=eyJ0eXBlIjoicHVtbCIsImNvZGUiOiJAc3RhcnR1bWxcblxuYXV0b251bWJlclxuXG5hY3RvciBcIueUqOaIt1wiIGFzIFVzZXJcbnBhcnRpY2lwYW50IFwi5rWP6KeI5ZmoXCIgYXMgQnJvd3NlclxucGFydGljaXBhbnQgXCLmnI3liqHnq69cIiBhcyBTZXJ2ZXIgI2xpZ2h0Z3JlZW5cbnBhcnRpY2lwYW50IFwi5pWw5o2u5bqTXCIgYXMgRGF0YWJhc2UgI29yYW5nZVxuXG5hY3RpdmF0ZSBVc2VyXG5cblVzZXIgLT4gQnJvd3Nlcjog6L6T5YWl6LSm5Y-35a-G56CBXG5hY3RpdmF0ZSBCcm93c2VyXG5cbkJyb3dzZXIgLT4gU2VydmVyOiDlj5HpgIHnmbvlvZXor7fmsYJcbmFjdGl2YXRlIFNlcnZlclxuXG5TZXJ2ZXIgLT4gRGF0YWJhc2U6IOagueaNrui0puWPt-S7juaVsOaNruW6k-afpeivouWvhueggVxuYWN0aXZhdGUgRGF0YWJhc2VcblxuRGF0YWJhc2UgLS0-IFNlcnZlcjog6L-U5Zue5a-55bqU6LSm5oi35a-G56CBXG5hY3RpdmF0ZSBTZXJ2ZXJcblNlcnZlciAtPiBTZXJ2ZXI6IOmqjOivgeWvhueggVxubm90ZSByaWdodCBvZiBTZXJ2ZXI6IOWmguaenOmqjOivgemAmui_h--8muS_neWtmOeZu-W9leWHreivgeWIsOe8k-WtmFxuXG5TZXJ2ZXIgLS0-IEJyb3dzZXI6IOi_lOWbnuivt-axgue7k-aenFxuZGVhY3RpdmF0ZSBTZXJ2ZXJcblxuQnJvd3NlciAtLT4gVXNlcjog5riy5p-T57uT5p6c5Yiw6aG16Z2iXG5cbkBlbmR1bWwiLCJ1cmwiOiJodHRwczovL2Nkbi5ubGFyay5jb20veXVxdWUvX19wdW1sLzAzZDRjZTIyZTFiNjE4ODYzYjI4NGM1ZmZiNmY3MGI1LnN2ZyIsImlkIjoib242SGIiLCJtYXJnaW4iOnsidG9wIjp0cnVlLCJib3R0b20iOnRydWV9LCJjYXJkIjoiZGlhZ3JhbSJ9" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<p>注册<br><img src="https://cdn.nlark.com/yuque/__puml/b9ddf85d434b8e427010637b56d83820.svg#lake_card_v2=eyJ0eXBlIjoicHVtbCIsImNvZGUiOiJAc3RhcnR1bWxcblxuYXV0b251bWJlclxuXG5hY3RvciBcIueUqOaIt1wiIGFzIFVzZXJcbnBhcnRpY2lwYW50IFwi5rWP6KeI5ZmoXCIgYXMgQnJvd3NlclxucGFydGljaXBhbnQgXCLmnI3liqHnq69cIiBhcyBTZXJ2ZXIgI2xpZ2h0Z3JlZW5cbnBhcnRpY2lwYW50IFwi5pWw5o2u5bqTXCIgYXMgRGF0YWJhc2UgI29yYW5nZVxuXG5hY3RpdmF0ZSBVc2VyXG5cblVzZXIgLT4gQnJvd3Nlcjog6L6T5YWl6YKu566x44CB6LSm5Y-344CB5a-G56CBXG5hY3RpdmF0ZSBCcm93c2VyXG5cbkJyb3dzZXIgLT4gU2VydmVyOiDlj5HpgIHms6jlhozor7fmsYJcbmFjdGl2YXRlIFNlcnZlclxuXG5TZXJ2ZXIgLT4gRGF0YWJhc2U6IOagueaNrui0puWPt-S7juaVsOaNruW6k-afpeivolxuYWN0aXZhdGUgRGF0YWJhc2VcblxuRGF0YWJhc2UgLS0-IFNlcnZlcjog6L-U5Zue5p-l6K-i57uT5p6cXG5hY3RpdmF0ZSBTZXJ2ZXJcblNlcnZlciAtPiBTZXJ2ZXI6IOmqjOivgeafpeivoue7k-aenFxubm90ZSByaWdodCBvZiBTZXJ2ZXI6IOWmguaenOafpeivoue7k-aenOS4uuepuu-8muS_neWtmOaVsOaNruWIsOaVsOaNruW6kzvmn6Xor6Lnu5PmnpzkuI3kuLrnqbrvvIzov5Tlm57igJzotKblj7flt7Lms6jlhozigJ1cblxuU2VydmVyIC0tPiBCcm93c2VyOiDov5Tlm57or7fmsYLnu5PmnpxcbmRlYWN0aXZhdGUgU2VydmVyXG5cbkJyb3dzZXIgLS0-IFVzZXI6IOa4suafk-e7k-aenOWIsOmhtemdolxuXG5AZW5kdW1sIiwidXJsIjoiaHR0cHM6Ly9jZG4ubmxhcmsuY29tL3l1cXVlL19fcHVtbC9iOWRkZjg1ZDQzNGI4ZTQyNzAxMDYzN2I1NmQ4MzgyMC5zdmciLCJpZCI6ImNhQUVRIiwibWFyZ2luIjp7InRvcCI6dHJ1ZSwiYm90dG9tIjp0cnVlfSwiaGVpZ2h0Ijo2OTIuMjAzMTI1LCJjYXJkIjoiZGlhZ3JhbSJ9" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<ul>
<li>题目模块：试题CRUD<br><img src="https://cdn.nlark.com/yuque/__puml/2bbc2131fee50094a3131764a5b542aa.svg#lake_card_v2=eyJ0eXBlIjoicHVtbCIsImNvZGUiOiJAc3RhcnR1bWxcblxuYXV0b251bWJlclxuXG5hY3RvciBcIueUqOaIt1wiIGFzIFVzZXJcbnBhcnRpY2lwYW50IFwi5rWP6KeI5ZmoXCIgYXMgQnJvd3NlclxucGFydGljaXBhbnQgXCLmnI3liqHnq69cIiBhcyBTZXJ2ZXIgI2xpZ2h0Z3JlZW5cbnBhcnRpY2lwYW50IFwi5pWw5o2u5bqTXCIgYXMgRGF0YWJhc2UgI29yYW5nZVxuXG5hY3RpdmF0ZSBVc2VyXG5cblVzZXIgLT4gQnJvd3Nlcjog5aGr5YaZ6aKY55uu55u45YWz5L-h5oGvXG5hY3RpdmF0ZSBCcm93c2VyXG5cbkJyb3dzZXIgLT4gU2VydmVyOiDlj5HpgIHmk43kvZzor7fmsYJcbmFjdGl2YXRlIFNlcnZlclxuXG5TZXJ2ZXIgLT4gU2VydmVyOiDpqozor4Hmk43kvZzlkIjms5XmgKdcblNlcnZlciAtPiBTZXJ2ZXI6IOmqjOivgeivt-axguWPguaVsOWQiOazleaAp1xubm90ZSByaWdodCBvZiBTZXJ2ZXI6IOWmguaenOS7peS4iuWdh-mqjOivgemAmui_h1xuYWN0aXZhdGUgU2VydmVyXG5cblNlcnZlciAtPiBEYXRhYmFzZTog5Y-R6YCB5pON5L2c6K-35rGC5Yiw5pWw5o2u5bqTXG5hY3RpdmF0ZSBEYXRhYmFzZVxuXG5EYXRhYmFzZSAtLT4gU2VydmVyOiDov5Tlm57mk43kvZznu5PmnpxcblxuU2VydmVyIC0tPiBCcm93c2VyOiDov5Tlm57or7fmsYLnu5PmnpxcbmRlYWN0aXZhdGUgU2VydmVyXG5cbkJyb3dzZXIgLS0-IFVzZXI6IOa4suafk-e7k-aenOWIsOmhtemdolxuXG5AZW5kdW1sIiwidXJsIjoiaHR0cHM6Ly9jZG4ubmxhcmsuY29tL3l1cXVlL19fcHVtbC8yYmJjMjEzMWZlZTUwMDk0YTMxMzE3NjRhNWI1NDJhYS5zdmciLCJpZCI6ImNHMHJoIiwibWFyZ2luIjp7InRvcCI6dHJ1ZSwiYm90dG9tIjp0cnVlfSwiY2FyZCI6ImRpYWdyYW0ifQ==" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></li>
<li>判题模块（程序提交和判题）<ul>
<li>程序提交<br> <img src="https://cdn.nlark.com/yuque/__puml/bedf05a76539588f8835344c5473c7c2.svg#lake_card_v2=eyJ0eXBlIjoicHVtbCIsImNvZGUiOiJAc3RhcnR1bWxcblxuYXV0b251bWJlclxuXG5hY3RvciBcIueUqOaIt1wiIGFzIFVzZXJcbnBhcnRpY2lwYW50IFwi5rWP6KeI5ZmoXCIgYXMgQnJvd3NlclxucGFydGljaXBhbnQgXCLmnI3liqHnq69cIiBhcyBTZXJ2ZXIgI29yYW5nZVxucGFydGljaXBhbnQgXCLmlbDmja7lupNcIiBhcyBEYXRhYmFzZVxucGFydGljaXBhbnQgXCLliKTpopjmnLpcIiBhcyBKdWRnZVxuXG5hY3RpdmF0ZSBVc2VyXG5cblVzZXIgLT4gQnJvd3Nlcjog6L6T5YWl5Luj56CBXG5hY3RpdmF0ZSBCcm93c2VyXG5cbkJyb3dzZXIgLT4gU2VydmVyOiDmj5DkuqTku6PnoIHlubblj5HpgIHnvJbor5Hov5DooYzor7fmsYJcbmFjdGl2YXRlIFNlcnZlclxuXG5TZXJ2ZXIgLT4gU2VydmVyOiDnvJbor5Hku6PnoIFcbmFjdGl2YXRlIERhdGFiYXNlXG5TZXJ2ZXIgLT4gRGF0YWJhc2U6IOa3u-WKoOWIpOmimOivt-axglxuYWN0aXZhdGUgSnVkZ2VcblNlcnZlciAtPiBKdWRnZTog5o-Q5Lqk6L-Q6KGM6K-35rGCXG5cbmFjdGl2YXRlIERhdGFiYXNlXG5EYXRhYmFzZSAtLT4gU2VydmVyOiDov5Tlm57mt7vliqDnu5PmnpxcblxuYWN0aXZhdGUgSnVkZ2Vcbkp1ZGdlIC0tPiBTZXJ2ZXI6IOi_lOWbnuS7o-eggei_kOihjOe7k-aenFxuYWN0aXZhdGUgU2VydmVyXG5TZXJ2ZXIgLS0-IEJyb3dzZXI6IOi_lOWbnuaPkOS6pOivt-axgklE77yIcXVlc3Rpb25TdWJtaXRJZO-8iVxuQnJvd3NlciAtLT4gVXNlcjog5riy5p-T6L-U5Zue57uT5p6c5Yiw6aG16Z2iXG5cbkBlbmR1bWwiLCJ1cmwiOiJodHRwczovL2Nkbi5ubGFyay5jb20veXVxdWUvX19wdW1sL2JlZGYwNWE3NjUzOTU4OGY4ODM1MzQ0YzU0NzNjN2MyLnN2ZyIsImlkIjoiTUJ3blciLCJtYXJnaW4iOnsidG9wIjp0cnVlLCJib3R0b20iOnRydWV9LCJjYXJkIjoiZGlhZ3JhbSJ9" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'><br> +判题<br> <img src="https://cdn.nlark.com/yuque/__puml/cd205814a12f16a3c33973e24a967938.svg#lake_card_v2=eyJ0eXBlIjoicHVtbCIsImNvZGUiOiJAc3RhcnR1bWxcblxuYXV0b251bWJlclxucGFydGljaXBhbnQgXCLliKTpopjmqKHlnZdcIiBhcyBKdWRnZSAjb3JhbmdlXG5wYXJ0aWNpcGFudCBcIuS7o-eggeaymeeusVwiIGFzIENvZGVTYW5kYm94ICNvcmFuZ2VcbnBhcnRpY2lwYW50IFwiRG9ja2VyXCIgYXMgRG9ja2VyICNvcmFuZ2VcblxuYWN0aXZhdGUgSnVkZ2Vcbkp1ZGdlIC0-IENvZGVTYW5kYm94OiDmj5DkuqTku6PnoIHmiafooYzor7fmsYJcblxuYWN0aXZhdGUgQ29kZVNhbmRib3hcbkNvZGVTYW5kYm94IC0-IERvY2tlcjog5Yib5bu65a655Zmo5bm26L-Q6KGM5Luj56CBXG5cbmFjdGl2YXRlIERvY2tlclxuRG9ja2VyIC0tPiBDb2RlU2FuZGJveDog6L-U5Zue6L-Q6KGM57uT5p6cXG5cbmFjdGl2YXRlIENvZGVTYW5kYm94XG5Db2RlU2FuZGJveCAtPiBDb2RlU2FuZGJveDog5pW05ZCI5Luj56CB5omn6KGM57uT5p6cXG5Db2RlU2FuZGJveCAtLT4gSnVkZ2U6IOi_lOWbnuaVtOWQiOe7k-aenFxuQGVuZHVtbCIsInVybCI6Imh0dHBzOi8vY2RuLm5sYXJrLmNvbS95dXF1ZS9fX3B1bWwvY2QyMDU4MTRhMTJmMTZhM2MzMzk3M2UyNGE5Njc5Mzguc3ZnIiwiaWQiOiJEY0wyMyIsIm1hcmdpbiI6eyJ0b3AiOnRydWUsImJvdHRvbSI6dHJ1ZX0sImNhcmQiOiJkaWFncmFtIn0=" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></li>
</ul>
</li>
</ul>
<hr>
<p><a name="TGZfF"></a></p>
<h2 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h2><p><a name="34006b34"></a></p>
<h3 id="用户表"><a href="#用户表" class="headerlink" title="用户表"></a>用户表</h3><p>只有管理员才能发布和管理题目，普通用户只能看题</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 用户表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> <span class="keyword">user</span></span><br><span class="line">(</span><br><span class="line">  id           <span class="type">bigint</span> auto_increment comment <span class="string">&#x27;id&#x27;</span> <span class="keyword">primary</span> key,</span><br><span class="line">  userAccount  <span class="type">varchar</span>(<span class="number">256</span>)                           <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;账号&#x27;</span>,</span><br><span class="line">  userPassword <span class="type">varchar</span>(<span class="number">512</span>)                           <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">  userName     <span class="type">varchar</span>(<span class="number">256</span>)                           <span class="keyword">null</span> comment <span class="string">&#x27;用户昵称&#x27;</span>,</span><br><span class="line">  userAvatar   <span class="type">varchar</span>(<span class="number">1024</span>)                          <span class="keyword">null</span> comment <span class="string">&#x27;用户头像&#x27;</span>,</span><br><span class="line">  userProfile  <span class="type">varchar</span>(<span class="number">512</span>)                           <span class="keyword">null</span> comment <span class="string">&#x27;用户简介&#x27;</span>,</span><br><span class="line">  userRole     <span class="type">varchar</span>(<span class="number">256</span>) <span class="keyword">default</span> <span class="string">&#x27;user&#x27;</span>            <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;用户角色：user/admin/ban&#x27;</span>,</span><br><span class="line">  createTime   datetime     <span class="keyword">default</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  updateTime   datetime     <span class="keyword">default</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">on</span> <span class="keyword">update</span> <span class="built_in">CURRENT_TIMESTAMP</span> comment <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  isDelete     tinyint      <span class="keyword">default</span> <span class="number">0</span>                 <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;是否删除&#x27;</span>,</span><br><span class="line">  index idx_unionId (unionId)</span><br><span class="line">) comment <span class="string">&#x27;用户&#x27;</span> <span class="keyword">collate</span> <span class="operator">=</span> utf8mb4_unicode_ci;</span><br></pre></td></tr></table></figure>

<p><a name="c4dd6d1a"></a></p>
<h3 id="题目表"><a href="#题目表" class="headerlink" title="题目表"></a>题目表</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 题目表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> question</span><br><span class="line">(</span><br><span class="line">  id         <span class="type">bigint</span> auto_increment comment <span class="string">&#x27;id&#x27;</span> <span class="keyword">primary</span> key,</span><br><span class="line">  title      <span class="type">varchar</span>(<span class="number">512</span>)                       <span class="keyword">null</span> comment <span class="string">&#x27;标题&#x27;</span>,</span><br><span class="line">  content    text                               <span class="keyword">null</span> comment <span class="string">&#x27;内容&#x27;</span>,</span><br><span class="line">  tags       <span class="type">varchar</span>(<span class="number">1024</span>)                      <span class="keyword">null</span> comment <span class="string">&#x27;标签列表（json 数组）&#x27;</span>,</span><br><span class="line">  submitNum  <span class="type">int</span> 		<span class="keyword">default</span> <span class="number">0</span> <span class="keyword">not</span> 			 <span class="keyword">null</span> comment <span class="string">&#x27;提交数&#x27;</span>,</span><br><span class="line">  acceptNum  <span class="type">int</span> 		<span class="keyword">default</span> <span class="number">0</span> <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;通过数&#x27;</span>,</span><br><span class="line">  judgeConfig text 							<span class="keyword">null</span> comment <span class="string">&#x27;判题示例&#x27;</span>,</span><br><span class="line">  judgeCase  text    							<span class="keyword">null</span> comment <span class="string">&#x27;判题示例&#x27;</span>,</span><br><span class="line">  userId     <span class="type">bigint</span>                             <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;创建用户 id&#x27;</span>,</span><br><span class="line">  createTime datetime <span class="keyword">default</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  updateTime datetime <span class="keyword">default</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">on</span> <span class="keyword">update</span> <span class="built_in">CURRENT_TIMESTAMP</span> comment <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  isDelete   tinyint  <span class="keyword">default</span> <span class="number">0</span>                 <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;是否删除&#x27;</span>,</span><br><span class="line">  index idx_userId (userId)</span><br><span class="line">) comment <span class="string">&#x27;题目&#x27;</span> <span class="keyword">collate</span> <span class="operator">=</span> utf8mb4_unicode_ci;</span><br></pre></td></tr></table></figure>

<p><a name="cec2ecd8"></a></p>
<h3 id="题目提交表"><a href="#题目提交表" class="headerlink" title="题目提交表"></a>题目提交表</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 题目提交表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> question_submit</span><br><span class="line">(</span><br><span class="line">  id         <span class="type">bigint</span> auto_increment comment <span class="string">&#x27;id&#x27;</span> <span class="keyword">primary</span> key,</span><br><span class="line">  <span class="keyword">language</span> <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;编程语言&#x27;</span>,</span><br><span class="line">  code text <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;用户代码&#x27;</span>,</span><br><span class="line">  judgeInfo text <span class="keyword">null</span> comment <span class="string">&#x27;判题信息（json对象）&#x27;</span>,</span><br><span class="line">  status <span class="type">int</span> <span class="keyword">default</span> <span class="number">0</span> <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;判题状态(0-待判题 1-判题中 2-成功 3-失败)&#x27;</span>,</span><br><span class="line">  questionId <span class="type">bigint</span> <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;题目id&#x27;</span>,</span><br><span class="line">  userId <span class="type">bigint</span> <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;提交用户id&#x27;</span>,</span><br><span class="line">  createTime datetime <span class="keyword">default</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  updateTime datetime <span class="keyword">default</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">on</span> <span class="keyword">update</span> <span class="built_in">CURRENT_TIMESTAMP</span> comment <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  isDelete tinyint <span class="keyword">default</span> <span class="number">0</span>,</span><br><span class="line">  index idx_questionId (questionId),</span><br><span class="line">  index idx_userId (userId)</span><br><span class="line">) comment <span class="string">&#x27;题目提交&#x27;</span>;</span><br></pre></td></tr></table></figure>

<hr>
<p><a name="J6f8Q"></a></p>
<h2 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h2><p>Java 17 + SpringBoot 3 + Spring Cloud Alibaba + Mybatis + Mybatis-Plus + Redis 6+ RabbitMQ + Docker<br />SpringBoot 3： 基础技术框架<br />Spring Cloud Alibaba： 微服务架构 Gateway + Nacos<br />Mybatis + Mybatis-Plus：数据库交互<br />Redis 6：缓存用户登陆数据<br />RabbitMQ：异步处理判题请求，解耦题目模块和判题模块<br />Docker：代码沙箱的核心实现，隔离代码运行环境</p>
<hr>
<p><a name="mTZXF"></a></p>
<h2 id="项目初始化"><a href="#项目初始化" class="headerlink" title="项目初始化"></a>项目初始化</h2><p><a name="cmMc4"></a></p>
<h3 id="项目依赖"><a href="#项目依赖" class="headerlink" title="项目依赖"></a>项目依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--  lookup parent from repository  --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.afool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>oj<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>oj<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">java.version</span>&gt;</span>17<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--  https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-aop  --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--  https://mvnrepository.com/artifact/com.baomidou/mybatis-plus-boot-starter  --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--  https://mvnrepository.com/artifact/com.github.xiaoymin/knife4j-openapi3-jakarta-spring-boot-starter  --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.xiaoymin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>knife4j-openapi3-jakarta-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--  https://mvnrepository.com/artifact/com.google.guava/guava  --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.guava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guava<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>32.1.2-android<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--  https://mvnrepository.com/artifact/org.yaml/snakeyaml  --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.yaml<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>snakeyaml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--  https://mvnrepository.com/artifact/org.apache.commons/commons-lang3  --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.13.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--  https://mvnrepository.com/artifact/com.google.code.gson/gson  --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.10.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--  https://mvnrepository.com/artifact/cn.hutool/hutool-all  --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>5.8.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--  https://mvnrepository.com/artifact/org.apache.poi/poi  --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">exclude</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><a name="gImKQ"></a></p>
<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 公共配置文件</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">xxx</span></span><br><span class="line">  <span class="comment"># 默认 dev 环境</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line">  <span class="comment"># session 配置</span></span><br><span class="line">  <span class="attr">session:</span></span><br><span class="line">    <span class="comment"># todo 取消注释开启分布式 session（须先配置 Redis）</span></span><br><span class="line">    <span class="comment"># SpringBoot 3 导入相关以来后，默认使用Redis,该配置项已被丢弃</span></span><br><span class="line">    <span class="comment"># 相关链接：https://github.com/spring-projects/spring-boot/issues/27738</span></span><br><span class="line">    <span class="comment"># https://github.com/spring-projects/spring-boot/issues/27756</span></span><br><span class="line">    <span class="comment"># https://github.com/spring-projects/spring-session/issues/2459</span></span><br><span class="line">		<span class="comment"># store-type: redis</span></span><br><span class="line">    <span class="comment"># 30 天过期</span></span><br><span class="line">    <span class="attr">timeout:</span> <span class="string">xxx</span></span><br><span class="line">  <span class="comment"># 数据库配置</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/database_name</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">username</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">password</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">multipart:</span></span><br><span class="line">      <span class="comment"># 大小限制</span></span><br><span class="line">      <span class="attr">max-file-size:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">address:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">  <span class="attr">port:</span> <span class="string">port</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">context-path:</span> <span class="string">/api</span></span><br><span class="line">    <span class="comment"># cookie 30 天过期</span></span><br><span class="line">    <span class="attr">session:</span></span><br><span class="line">      <span class="attr">cookie:</span></span><br><span class="line">        <span class="attr">max-age:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">logic-delete-field:</span> <span class="string">isDelete</span> <span class="comment"># 全局逻辑删除的实体字段名</span></span><br><span class="line">      <span class="attr">logic-delete-value:</span> <span class="number">1</span> <span class="comment"># 逻辑已删除值（默认为 1）</span></span><br><span class="line">      <span class="attr">logic-not-delete-value:</span> <span class="number">0</span> <span class="comment"># 逻辑未删除值（默认为 0）</span></span><br><span class="line"><span class="comment"># springdoc-openapi项目配置</span></span><br><span class="line"><span class="attr">springdoc:</span></span><br><span class="line">  <span class="attr">swagger-ui:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/swagger-ui.html</span></span><br><span class="line">    <span class="attr">tags-sorter:</span> <span class="string">alpha</span></span><br><span class="line">    <span class="attr">operations-sorter:</span> <span class="string">alpha</span></span><br><span class="line">  <span class="attr">api-docs:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/v3/api-docs</span></span><br></pre></td></tr></table></figure>
<p><a name="MShc1"></a></p>
<h3 id="相关配置类"><a href="#相关配置类" class="headerlink" title="相关配置类"></a>相关配置类</h3><p>1.解决跨域问题</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CorsConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> &#123;</span><br><span class="line">        <span class="comment">// 覆盖所有请求</span></span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                <span class="comment">// 允许发送 Cookie</span></span><br><span class="line">                .allowCredentials(<span class="literal">true</span>)</span><br><span class="line">                <span class="comment">// 放行哪些域名（必须用 patterns，否则 * 会和 allowCredentials 冲突）</span></span><br><span class="line">                .allowedOriginPatterns(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .allowedMethods(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;POST&quot;</span>, <span class="string">&quot;PUT&quot;</span>, <span class="string">&quot;DELETE&quot;</span>, <span class="string">&quot;OPTIONS&quot;</span>)</span><br><span class="line">                .allowedHeaders(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .exposedHeaders(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.解决 Long 转 Json 精度丢失问题</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@JsonComponent</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JsonConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加 Long 转 json 精度丢失的配置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ObjectMapper <span class="title function_">jacksonObjectMapper</span><span class="params">(Jackson2ObjectMapperBuilder builder)</span> &#123;</span><br><span class="line">        <span class="type">ObjectMapper</span> <span class="variable">objectMapper</span> <span class="operator">=</span> builder.createXmlMapper(<span class="literal">false</span>).build();</span><br><span class="line">        <span class="type">SimpleModule</span> <span class="variable">module</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleModule</span>();</span><br><span class="line">        <span class="keyword">module</span>.addSerializer(Long.class, ToStringSerializer.instance);</span><br><span class="line">        <span class="keyword">module</span>.addSerializer(Long.TYPE, ToStringSerializer.instance);</span><br><span class="line">        objectMapper.registerModule(<span class="keyword">module</span>);</span><br><span class="line">        <span class="keyword">return</span> objectMapper;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3.配置 Mybatis-Plus</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.xxx.xxx.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBatisPlusConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 拦截器配置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MybatisPlusInterceptor <span class="title function_">mybatisPlusInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">MybatisPlusInterceptor</span> <span class="variable">interceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MybatisPlusInterceptor</span>();</span><br><span class="line">        <span class="comment">// 分页插件</span></span><br><span class="line">        interceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="title class_">PaginationInnerInterceptor</span>(DbType.MYSQL));</span><br><span class="line">        <span class="keyword">return</span> interceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a name="b06SF"></a></p>
<h3 id="配置全局日志记录"><a href="#配置全局日志记录" class="headerlink" title="配置全局日志记录"></a>配置全局日志记录</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogInterceptor</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行拦截</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Around(&quot;execution(* com.afool.blog.controller.*.*(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">doInterceptor</span><span class="params">(ProceedingJoinPoint point)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        <span class="comment">// 计时</span></span><br><span class="line">        <span class="type">StopWatch</span> <span class="variable">stopWatch</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StopWatch</span>();</span><br><span class="line">        stopWatch.start();</span><br><span class="line">        <span class="comment">// 获取请求路径</span></span><br><span class="line">        <span class="type">RequestAttributes</span> <span class="variable">requestAttributes</span> <span class="operator">=</span> RequestContextHolder.currentRequestAttributes();</span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">httpServletRequest</span> <span class="operator">=</span> ((ServletRequestAttributes) requestAttributes).getRequest();</span><br><span class="line">        <span class="comment">// 生成请求唯一 id</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">requestId</span> <span class="operator">=</span> UUID.randomUUID().toString();</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> httpServletRequest.getRequestURI();</span><br><span class="line">        <span class="comment">// 获取请求参数</span></span><br><span class="line">        Object[] args = point.getArgs();</span><br><span class="line">        <span class="type">String</span> <span class="variable">reqParam</span> <span class="operator">=</span> <span class="string">&quot;[&quot;</span> + StringUtils.join(args, <span class="string">&quot;, &quot;</span>) + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">        <span class="comment">// 输出请求日志</span></span><br><span class="line">        log.info(<span class="string">&quot;request start，id: &#123;&#125;, path: &#123;&#125;, ip: &#123;&#125;, params: &#123;&#125;&quot;</span>, requestId, url,</span><br><span class="line">                httpServletRequest.getRemoteHost(), reqParam);</span><br><span class="line">        <span class="comment">// 执行原方法</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">result</span> <span class="operator">=</span> point.proceed();</span><br><span class="line">        <span class="comment">// 输出响应日志</span></span><br><span class="line">        stopWatch.stop();</span><br><span class="line">        <span class="type">long</span> <span class="variable">totalTimeMillis</span> <span class="operator">=</span> stopWatch.getTotalTimeMillis();</span><br><span class="line">        log.info(<span class="string">&quot;request end, id: &#123;&#125;, cost: &#123;&#125;ms&quot;</span>, requestId, totalTimeMillis);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a name="wlIui"></a></p>
<h3 id="全局异常处理"><a href="#全局异常处理" class="headerlink" title="全局异常处理"></a>全局异常处理</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestControllerAdvice</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExceptionHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(BusinessException.class)</span></span><br><span class="line">    <span class="keyword">public</span> BaseResponse&lt;?&gt; businessExceptionHandler(BusinessException e) &#123;</span><br><span class="line">        log.error(<span class="string">&quot;BusinessException&quot;</span>, e);</span><br><span class="line">        <span class="keyword">return</span> ResultUtils.error(e.getCode(), e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(RuntimeException.class)</span></span><br><span class="line">    <span class="keyword">public</span> BaseResponse&lt;?&gt; runtimeExceptionHandler(RuntimeException e) &#123;</span><br><span class="line">        log.error(<span class="string">&quot;RuntimeException&quot;</span>, e);</span><br><span class="line">        <span class="keyword">return</span> ResultUtils.error(ErrorCode.SYSTEM_ERROR, <span class="string">&quot;系统错误&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a name="y8ulf"></a></p>
<h3 id="编写实体类"><a href="#编写实体类" class="headerlink" title="编写实体类"></a>编写实体类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@TableName(value = &quot;user&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableId(type = IdType.ASSIGN_ID)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户账号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String userAccount;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户密码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String userPassword;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户昵称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户头像</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String userAvatar;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户简介</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String userProfile;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户角色：user/admin/ban</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String userRole;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date updateTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否删除</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableLogic</span></span><br><span class="line">    <span class="keyword">private</span> Integer isDelete;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Serial</span></span><br><span class="line">    <span class="meta">@TableField(exist = false)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@TableName(value =&quot;question&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Question</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableId(type = IdType.ASSIGN_ID)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 标题</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 内容</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 标签列表（json 数组）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String tags;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提交数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer submitNum;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer acceptNum;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判题示例</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String judgeConfig;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判题示例</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String judgeCase;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建用户 id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long userId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date updateTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否删除</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer isDelete;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Serial</span></span><br><span class="line">    <span class="meta">@TableField(exist = false)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@TableName(value =&quot;question_submit&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">QuestionSubmit</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableId(type = IdType.ASSIGN_ID)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编程语言</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String language;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户代码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判题信息（json对象）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String judgeInfo;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判题状态(0-待判题 1-判题中 2-成功 3-失败)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 题目id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long questionId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提交用户id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long userId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date updateTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否删除</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer isDelete;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Serial</span></span><br><span class="line">    <span class="meta">@TableField(exist = false)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<p><a name="MXpOH"></a></p>
<h2 id="模块实现"><a href="#模块实现" class="headerlink" title="模块实现"></a>模块实现</h2><p><a name="BKdiv"></a></p>
<h3 id="用户模块"><a href="#用户模块" class="headerlink" title="用户模块"></a>用户模块</h3><p>权限校验注解</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Target(ElementType.METHOD)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> AuthCheck &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 必须有某个角色</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String <span class="title function_">mustRole</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>全局权限校验处理</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AuthInterceptor</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行拦截</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Around(&quot;@annotation(authCheck)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">doInterceptor</span><span class="params">(ProceedingJoinPoint joinPoint, AuthCheck authCheck)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">mustRole</span> <span class="operator">=</span> authCheck.mustRole();</span><br><span class="line">        <span class="type">RequestAttributes</span> <span class="variable">requestAttributes</span> <span class="operator">=</span> RequestContextHolder.currentRequestAttributes();</span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">request</span> <span class="operator">=</span> ((ServletRequestAttributes) requestAttributes).getRequest();</span><br><span class="line">        <span class="comment">// 当前登录用户</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">loginUser</span> <span class="operator">=</span> userService.getLoginUser(request);</span><br><span class="line">        <span class="comment">// 必须有该权限才通过</span></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotBlank(mustRole)) &#123;</span><br><span class="line">            <span class="type">UserRoleEnum</span> <span class="variable">mustUserRoleEnum</span> <span class="operator">=</span> UserRoleEnum.getEnumByValue(mustRole);</span><br><span class="line">            <span class="keyword">if</span> (mustUserRoleEnum == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">String</span> <span class="variable">userRole</span> <span class="operator">=</span> loginUser.getUserRole();</span><br><span class="line">            <span class="comment">// 如果被封号，直接拒绝</span></span><br><span class="line">            <span class="keyword">if</span> (UserRoleEnum.BAN.equals(mustUserRoleEnum)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 必须有管理员权限</span></span><br><span class="line">            <span class="keyword">if</span> (UserRoleEnum.ADMIN.equals(mustUserRoleEnum)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!mustRole.equals(userRole)) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 通过权限校验，放行</span></span><br><span class="line">        <span class="keyword">return</span> joinPoint.proceed();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a name="vPv9j"></a></p>
<h3 id="题目模块"><a href="#题目模块" class="headerlink" title="题目模块"></a>题目模块</h3><p>题目模块中，主要都是一些通用的CRUD方法，唯一需要处理的就是在设计数据库的时候，某些字段被设计成了json格式的string类型字符串，需要在使用时进行处理。<br><a name="bREPi"></a></p>
<h3 id="判题模块"><a href="#判题模块" class="headerlink" title="判题模块"></a>判题模块</h3><p>判题流程<br><img src="https://cdn.nlark.com/yuque/__puml/75a6be4e43e11d2475b2bffa95d74cba.svg#lake_card_v2=eyJ0eXBlIjoicHVtbCIsImNvZGUiOiJAc3RhcnR1bWxcblxuc3RhcnRcblxuLeinpuWPkeWIpOmimOaWueazlSBkb0p1ZGdlXG5cbmlmICjor7vlj5ZDb2RlU2FuZGJveFR5cGXlsZ7mgKcpIHRoZW4gKGRlZmF1bHQpXG4gIC3osIPnlKggZXhhbXBsZSDliKTpopjnsbtcbmVsc2UgKGV4YW1wbGUgLyByZW1vdGUgLyB0aGlyZF9wYXJ0eSlcbiAgLeiwg-eUqOWvueW6lOWIpOmimOexu1xuZW5kaWZcbi3op6blj5HliKTpopjmlrnms5UgZXhlY3V0ZUNvZGVcbi3osIPnlKjku6PnoIHmspnnrrFcbi3mlbTnkIbov5Tlm57nu5Pmnpzlubbmj5DkuqTliLDmlbDmja7lupNcbnN0b3BcblxuQGVuZHVtbCIsInVybCI6Imh0dHBzOi8vY2RuLm5sYXJrLmNvbS95dXF1ZS9fX3B1bWwvNzVhNmJlNGU0M2UxMWQyNDc1YjJiZmZhOTVkNzRjYmEuc3ZnIiwiaWQiOiJiMWQzQSIsIm1hcmdpbiI6eyJ0b3AiOnRydWUsImJvdHRvbSI6dHJ1ZX0sImNhcmQiOiJkaWFncmFtIn0=" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'>代理模式： 通过代理类对一些类进行代理，便于对类的一些方法进行强化</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CodeSandboxProxy</span> <span class="keyword">implements</span> <span class="title class_">CodeSandbox</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> CodeSandbox codeSandbox;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CodeSandboxProxy</span><span class="params">(CodeSandbox codeSandbox)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.codeSandbox = codeSandbox;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ExecuteCodeResponse <span class="title function_">executeCode</span><span class="params">(ExecuteCodeRequest executeCodeRequest)</span> &#123;</span><br><span class="line">        System.out.println(JSONUtil.toJsonStr(executeCodeRequest));</span><br><span class="line">        <span class="type">ExecuteCodeResponse</span> <span class="variable">executeCodeResponse</span> <span class="operator">=</span> codeSandbox.executeCode(executeCodeRequest);</span><br><span class="line">        System.out.println(JSONUtil.toJsonStr(executeCodeResponse));</span><br><span class="line">        <span class="keyword">return</span> executeCodeResponse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>工厂模式： 封装一个统一的判题机对象，根据编程语言动态选择对应的判题机，以便于以后扩充支持的编程语言</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CodeSandboxFactory</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CodeSandbox <span class="title function_">newInstance</span><span class="params">(String type)</span>&#123;</span><br><span class="line">        <span class="type">CodeSandboxTypeEnum</span> <span class="variable">typeEnum</span> <span class="operator">=</span> CodeSandboxTypeEnum.getEnumByValue(type);</span><br><span class="line">        <span class="keyword">if</span> (typeEnum != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">switch</span> (typeEnum) &#123;</span><br><span class="line">                <span class="keyword">case</span> REMOTE -&gt; <span class="keyword">new</span> <span class="title class_">RemoteCodeSandbox</span>();</span><br><span class="line">                <span class="keyword">case</span> THIRD_PARTY -&gt; <span class="keyword">new</span> <span class="title class_">ThirdPartyCodeSandbox</span>();</span><br><span class="line">                <span class="keyword">default</span> -&gt; <span class="keyword">new</span> <span class="title class_">ExampleCodeSandbox</span>();</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessException</span>(ErrorCode.PARAMS_NULL);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a name="h1VUg"></a></p>
<h3 id="有关题目模块和判题模块在判题时的异步执行"><a href="#有关题目模块和判题模块在判题时的异步执行" class="headerlink" title="有关题目模块和判题模块在判题时的异步执行"></a>有关题目模块和判题模块在判题时的异步执行</h3><p>项目简单使用 RabbitMQ 进行判题操作的异步解耦<br><img src="https://cdn.nlark.com/yuque/__puml/942faf449f58712c05d7747e524d95b3.svg#lake_card_v2=eyJ0eXBlIjoicHVtbCIsImNvZGUiOiJAc3RhcnR1bWxcblxuYXV0b251bWJlclxuXG5hY3RvciBcIueUqOaIt1wiIGFzIFVzZXJcbnBhcnRpY2lwYW50IFwi6aKY55uu5qih5Z2XXCIgYXMgUXVlc3Rpb24gI29yYW5nZVxucGFydGljaXBhbnQgXCLmlbDmja7lupNcIiBhcyBEYXRhYmFzZSAjb3JhbmdlXG5wYXJ0aWNpcGFudCBcIlJhYmJpdE1RXCIgYXMgUmFiYml0TVEgI29yYW5nZVxuXG5hY3RpdmF0ZSBVc2VyXG5cblVzZXIgLT4gUXVlc3Rpb246IOaPkOS6pOWIpOmimOivt-axglxuYWN0aXZhdGUgUXVlc3Rpb25cblxuUXVlc3Rpb24gLT4gUXVlc3Rpb246IOagoemqjOadg-mZkOWSjOivt-axguaVsOaNrlxuUXVlc3Rpb24gLT4gRGF0YWJhc2U6IOa3u-WKoOS7o-eggeaPkOS6pOiusOW9lVxuYWN0aXZhdGUgRGF0YWJhc2VcblxuRGF0YWJhc2UgLS0-IFF1ZXN0aW9uOiDov5Tlm57mt7vliqDnu5PmnpzvvIjmmK_lkKbmt7vliqDmiJDlip_vvIlcbmFjdGl2YXRlIERhdGFiYXNlXG5cblF1ZXN0aW9uIC0-IFJhYmJpdE1ROiDnlJ_kuqfmtojmga_mlL7lhaVyYWJiaXRNUeS4rVxuUXVlc3Rpb24gLS0-IFVzZXI6IOi_lOWbnuaPkOS6pOiusOW9lUlEXG5cbkBlbmR1bWwiLCJ1cmwiOiJodHRwczovL2Nkbi5ubGFyay5jb20veXVxdWUvX19wdW1sLzk0MmZhZjQ0OWY1ODcxMmMwNWQ3NzQ3ZTUyNGQ5NWIzLnN2ZyIsImlkIjoib2JIQmwiLCJtYXJnaW4iOnsidG9wIjp0cnVlLCJib3R0b20iOnRydWV9LCJjYXJkIjoiZGlhZ3JhbSJ9" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'><img src="https://cdn.nlark.com/yuque/__puml/0a87f85ea560444ea7e8e676c8f62e19.svg#lake_card_v2=eyJ0eXBlIjoicHVtbCIsImNvZGUiOiJAc3RhcnR1bWxcblxuYXV0b251bWJlclxuXG5wYXJ0aWNpcGFudCBcIuWIpOmimOaooeWdl1wiIGFzIEp1ZGdlICNvcmFuZ2VcbnBhcnRpY2lwYW50IFwi5pWw5o2u5bqTXCIgYXMgRGF0YWJhc2UgI29yYW5nZVxucGFydGljaXBhbnQgXCLku6PnoIHmspnnrrFcIiBhcyBDb2RlU2FuZGJveCAjb3JhbmdlXG5wYXJ0aWNpcGFudCBcIlJhYmJpdE1RXCIgYXMgUmFiYml0TVEgI29yYW5nZVxuXG5hY3RpdmF0ZSBSYWJiaXRNUVxuXG5SYWJiaXRNUSAtLT4gSnVkZ2U6IOajgOa1i-WIsOa2iOaBr-S6p-eUn--8jOa2iOi0uea2iOaBr1xuYWN0aXZhdGUgSnVkZ2VcblxuSnVkZ2UgLT4gQ29kZVNhbmRib3g6IOaPkOS6pOS7o-eggeaJp-ihjOivt-axglxuYWN0aXZhdGUgQ29kZVNhbmRib3hcblxuQ29kZVNhbmRib3ggLS0-IEp1ZGdlOiDov5Tlm57miafooYznu5PmnpxcbmFjdGl2YXRlIEp1ZGdlXG5cbkp1ZGdlIC0-IERhdGFiYXNlOiDmm7TmlrDku6PnoIHmj5DkuqTorrDlvZVcbmFjdGl2YXRlIERhdGFiYXNlXG5cbkRhdGFiYXNlIC0tPiBKdWRnZTog6L-U5Zue5pu05paw57uT5p6cXG5cbkBlbmR1bWwiLCJ1cmwiOiJodHRwczovL2Nkbi5ubGFyay5jb20veXVxdWUvX19wdW1sLzBhODdmODVlYTU2MDQ0NGVhN2U4ZTY3NmM4ZjYyZTE5LnN2ZyIsImlkIjoiWTBDU2EiLCJtYXJnaW4iOnsidG9wIjp0cnVlLCJib3R0b20iOnRydWV9LCJjYXJkIjoiZGlhZ3JhbSJ9" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'><a name="vkDHB"></a></p>
<h2 id="代码沙箱设计实现"><a href="#代码沙箱设计实现" class="headerlink" title="代码沙箱设计实现"></a>代码沙箱设计实现</h2><p>代码沙箱主要依赖 Docker 去进行实现，使用 Docker 容器运行代码可以隔离代码运行环境和主机，运行完成后即可删除本地文件和容器。<br />Docker 通过 Linux Namespace 和 Cgroup 实现环境隔离。<br />项目操作 Docker 使用 Docker-java 库。 地址： <a href="https://github.com/docker-java/docker-java">https://github.com/docker-java/docker-java</a><br><a name="PeUVe"></a></p>
<h3 id="代码的编译和运行"><a href="#代码的编译和运行" class="headerlink" title="代码的编译和运行"></a>代码的编译和运行</h3><p><a name="kPYme"></a></p>
<h4 id="主要流程"><a href="#主要流程" class="headerlink" title="主要流程"></a>主要流程</h4><p><img src="https://cdn.nlark.com/yuque/__puml/7087bb9bcf50c6626b63a8bc434444fd.svg#lake_card_v2=eyJ0eXBlIjoicHVtbCIsImNvZGUiOiJAc3RhcnR1bWxcblxuc3RhcnRcblxuOjHjgIHkv53lrZjku6PnoIHliLAgamF2YSDmlofku7Y7XG46MuOAgee8luivkSBqYXZhIOaWh-S7tiA7XG46M-OAgeWcqGRvY2tlcuS4reaJp-ihjOe8luivkeWQjueahGphdmHku6PnoIHlubblvpfliLDovpPlh7rnu5Pmnpw7XG46NOOAgeaVtOWQiOi-k-WHuuS_oeaBrztcbjo144CB5Yig6Zmk5Luj56CB5paH5Lu2O1xuXG5zdG9wXG5cbkBlbmR1bWwiLCJ1cmwiOiJodHRwczovL2Nkbi5ubGFyay5jb20veXVxdWUvX19wdW1sLzcwODdiYjliY2Y1MGM2NjI2YjYzYThiYzQzNDQ0NGZkLnN2ZyIsImlkIjoiWWZwd3giLCJtYXJnaW4iOnsidG9wIjp0cnVlLCJib3R0b20iOnRydWV9LCJjYXJkIjoiZGlhZ3JhbSJ9" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'>因为流程比较固定，所以抽取统一的判题机运行代码的步骤进行封装，扩充编程语言时只需要继承该类重写部分方法即可，提高代码的复用性，使用模板模式进行设计。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">CodeSandboxTemplate</span> <span class="keyword">implements</span> <span class="title class_">CodeSandbox</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 1.保存代码到 java 文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> File <span class="title function_">saveCodeToFile</span><span class="params">(String code)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">userDir</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;user.dir&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">globalCodePath</span> <span class="operator">=</span> userDir + File.separator + <span class="string">&quot;tmpCode&quot;</span>;</span><br><span class="line">        <span class="comment">//判断目录是否存在</span></span><br><span class="line">        <span class="keyword">if</span> (!FileUtil.exist(globalCodePath)) &#123;</span><br><span class="line">            FileUtil.mkdir(globalCodePath);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//用户代码隔离存放</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">parentPath</span> <span class="operator">=</span> globalCodePath + File.separator + UUID.randomUUID();</span><br><span class="line">        <span class="type">String</span> <span class="variable">codeFilePath</span> <span class="operator">=</span> parentPath + File.separator + <span class="string">&quot;Main.java&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> FileUtil.writeString(code, codeFilePath, StandardCharsets.UTF_8);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 2.编译 java 文件  --release 8: 指定编译版本为java8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">compileCode</span><span class="params">(File file)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">compileCmd</span> <span class="operator">=</span> String.format(<span class="string">&quot;javac --release 8 -encoding utf-8 %s&quot;</span>, file.getAbsolutePath());</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Process</span> <span class="variable">process</span> <span class="operator">=</span> Runtime.getRuntime().exec(compileCmd);</span><br><span class="line">            <span class="type">int</span> <span class="variable">exitValue</span> <span class="operator">=</span> process.waitFor();</span><br><span class="line">            <span class="keyword">if</span> (exitValue == <span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;编译成功&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;编译失败&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 3.在docker中执行编译后的java代码并得到输出结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;ProcessOutputMsg&gt; <span class="title function_">runCompiledCode</span><span class="params">(File file, ExecuteCodeRequest executeCodeRequest)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="type">DockerJavaUtils</span> <span class="variable">dockerJavaUtils</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DockerJavaUtils</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">imageName</span> <span class="operator">=</span> ImageEnum.getEnumByLanguage(executeCodeRequest.getLanguage()).getImageName();</span><br><span class="line">        <span class="comment">//todo 初始化判题服务(后续单独提取出来)：判题服务第一次启动时统一拉取所有需要的image</span></span><br><span class="line">        dockerJavaUtils.pullImage(imageName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建容器</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> dockerJavaUtils.createContainer(imageName, file.getParentFile().getAbsolutePath(), executeCodeRequest.getMaxMemory());</span><br><span class="line">        <span class="comment">//启动容器</span></span><br><span class="line">        dockerJavaUtils.startContainer(id);</span><br><span class="line">        <span class="comment">//创建java指令并在容器中执行</span></span><br><span class="line">        <span class="comment">// todo 并不是每一次执行都能获取到内存使用情况</span></span><br><span class="line">        List&lt;String&gt; input = executeCodeRequest.getInput();</span><br><span class="line">        List&lt;ProcessOutputMsg&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(input.size());</span><br><span class="line">        <span class="keyword">for</span> (String s : input) &#123;</span><br><span class="line">            String[] arr = s.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            String[] cmdArray = ArrayUtil.addAll(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;java&quot;</span>, <span class="string">&quot;-cp&quot;</span>,<span class="string">&quot;/app&quot;</span>,<span class="string">&quot;Main&quot;</span>,&#125;, arr);</span><br><span class="line">            list.add(dockerJavaUtils.execCreate(id, cmdArray, executeCodeRequest.getTimeout()));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//暂停容器</span></span><br><span class="line">        dockerJavaUtils.stopContainer(id);</span><br><span class="line">        <span class="comment">//删除容器</span></span><br><span class="line">        dockerJavaUtils.removeContainer(id);</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 4、整合输出信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> ExecuteCodeResponse <span class="title function_">consolidateOutputMsg</span><span class="params">(List&lt;ProcessOutputMsg&gt; outputMsgList)</span>&#123;</span><br><span class="line">        <span class="type">ExecuteCodeResponse</span> <span class="variable">executeCodeResponse</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ExecuteCodeResponse</span>();</span><br><span class="line">        executeCodeResponse.setMessage(<span class="string">&quot;正常执行&quot;</span>);</span><br><span class="line">        executeCodeResponse.setStatus(<span class="number">1</span>);</span><br><span class="line">        <span class="type">CodeRunningResult</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CodeRunningResult</span>();</span><br><span class="line">        result.setResultList(outputMsgList);</span><br><span class="line">        executeCodeResponse.setCodeRunningResult(result);</span><br><span class="line">        <span class="keyword">return</span> executeCodeResponse;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除代码文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">delFile</span><span class="params">(File file)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span>  FileUtil.del(file.getParentFile().getAbsolutePath());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ExecuteCodeResponse <span class="title function_">executeCode</span><span class="params">(ExecuteCodeRequest executeCodeRequest)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">ExecuteCodeResponse</span> <span class="variable">executeCodeResponse</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ExecuteCodeResponse</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">code</span> <span class="operator">=</span> executeCodeRequest.getCode();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1.保存代码到 java 文件</span></span><br><span class="line">            <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> saveCodeToFile(code);</span><br><span class="line">            <span class="comment">//2.编译 java 文件  --release 8: 指定编译版本为java8</span></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">isCompile</span> <span class="operator">=</span> compileCode(file);</span><br><span class="line">            <span class="keyword">if</span> (!isCompile)&#123;</span><br><span class="line">                executeCodeResponse.setMessage(<span class="string">&quot;代码编译失败&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> executeCodeResponse;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//3.在docker中执行编译后的java代码并得到输出结果</span></span><br><span class="line">            List&lt;ProcessOutputMsg&gt; outputMsgList = runCompiledCode(file, executeCodeRequest);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//4.整理输出信息</span></span><br><span class="line">            executeCodeResponse = consolidateOutputMsg(outputMsgList);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//5.删除代码文件</span></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">isDelDir</span> <span class="operator">=</span> delFile(file);</span><br><span class="line">            <span class="keyword">if</span> (!isDelDir)&#123;</span><br><span class="line">                log.error(<span class="string">&quot;文件删除失败:  filepath=&quot;</span>+file.getParentFile().getAbsolutePath());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> executeCodeResponse;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JavaCodeSandbox</span> <span class="keyword">extends</span> <span class="title class_">CodeSandboxTemplate</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ExecuteCodeResponse <span class="title function_">executeCode</span><span class="params">(ExecuteCodeRequest executeCodeRequest)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.executeCode(executeCodeRequest);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a name="S3qVO"></a></p>
<h4 id="使用-Docker-java"><a href="#使用-Docker-java" class="headerlink" title="使用 Docker-java"></a>使用 Docker-java</h4><p>官方文档地址：<a href="https://github.com/docker-java/docker-java/blob/main/docs/getting_started.md">https://github.com/docker-java/docker-java/blob/main/docs/getting_started.md</a><br />一些其他资料： <a href="https://code84.com/88734.html">https://code84.com/88734.html</a><br /><a href="https://cloud.tencent.com/developer/article/2111270">https://cloud.tencent.com/developer/article/2111270</a><br /><a href="https://github.com/BerBai/JavaExample/blob/master/dockerjavademo/src/main/java/com/ber/dockerjavademo/service/DockerClientService.java">https://github.com/BerBai/JavaExample/blob/master/dockerjavademo/src/main/java/com/ber/dockerjavademo/service/DockerClientService.java</a><br />项目编写的工具类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DockerJavaUtils</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//实例化DockerClientConfig</span></span><br><span class="line">    <span class="type">DockerClientConfig</span> <span class="variable">config</span> <span class="operator">=</span> DefaultDockerClientConfig.createDefaultConfigBuilder().build();</span><br><span class="line">    <span class="comment">//实例化DockerHttpClient</span></span><br><span class="line">    <span class="type">DockerHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ApacheDockerHttpClient</span>.Builder()</span><br><span class="line">            .dockerHost(config.getDockerHost())</span><br><span class="line">            .sslConfig(config.getSSLConfig())</span><br><span class="line">            .maxConnections(<span class="number">100</span>)</span><br><span class="line">            .connectionTimeout(Duration.ofSeconds(<span class="number">30</span>))</span><br><span class="line">            .responseTimeout(Duration.ofSeconds(<span class="number">45</span>))</span><br><span class="line">            .build();</span><br><span class="line">    <span class="comment">//实例化DockerClient</span></span><br><span class="line">    <span class="type">DockerClient</span> <span class="variable">dockerClient</span> <span class="operator">=</span> DockerClientImpl.getInstance(config, httpClient);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 拉取镜像</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pullImage</span><span class="params">(String imageName)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="type">PullImageCmd</span> <span class="variable">pullImageCmd</span> <span class="operator">=</span> dockerClient.pullImageCmd(imageName);</span><br><span class="line">        <span class="type">PullImageResultCallback</span> <span class="variable">pullImageResultCallback</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PullImageResultCallback</span>()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onNext</span><span class="params">(PullResponseItem item)</span>&#123;</span><br><span class="line">                System.out.println(item.getStatus());</span><br><span class="line">                <span class="built_in">super</span>.onNext(item);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        pullImageCmd.exec(pullImageResultCallback)</span><br><span class="line">                .awaitCompletion();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移除镜像</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> imageName 镜像名：tag</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeImage</span><span class="params">(String imageName)</span>&#123;</span><br><span class="line">        <span class="type">RemoveImageCmd</span> <span class="variable">removeImageCmd</span> <span class="operator">=</span> dockerClient.removeImageCmd(imageName);</span><br><span class="line">        removeImageCmd.exec();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建容器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> imageName 镜像名：tag</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">createContainer</span><span class="params">(String imageName, String parentPath, <span class="type">long</span> maxMemory)</span>&#123;</span><br><span class="line">        <span class="type">CreateContainerCmd</span> <span class="variable">containerCmd</span> <span class="operator">=</span> dockerClient.createContainerCmd(imageName);</span><br><span class="line">        <span class="type">HostConfig</span> <span class="variable">hostConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HostConfig</span>();</span><br><span class="line">        <span class="comment">//映射本地文件到容器</span></span><br><span class="line">        hostConfig.setBinds(<span class="keyword">new</span> <span class="title class_">Bind</span>(parentPath, <span class="keyword">new</span> <span class="title class_">Volume</span>(<span class="string">&quot;/app&quot;</span>)));</span><br><span class="line">        <span class="comment">//设置内存限制</span></span><br><span class="line">        hostConfig.withMemory(maxMemory).withMemorySwap(<span class="number">0L</span>);</span><br><span class="line">        <span class="comment">//传入一个 seccomp json 文件限制程序权限</span></span><br><span class="line">        <span class="comment">//docker官方 seccomp json文件地址: https://github.com/moby/moby/blob/master/profiles/seccomp/default.json</span></span><br><span class="line">        <span class="comment">//docker官方对于 seccomp 文件的说明: https://docs.docker.com/engine/security/seccomp/</span></span><br><span class="line">        <span class="comment">//hostConfig.withSecurityOpts();</span></span><br><span class="line">        <span class="type">CreateContainerResponse</span> <span class="variable">response</span> <span class="operator">=</span> containerCmd</span><br><span class="line">                <span class="comment">//不允许使用网络</span></span><br><span class="line">                .withNetworkDisabled(<span class="literal">true</span>)</span><br><span class="line">                .withReadonlyRootfs(<span class="literal">true</span>)</span><br><span class="line">                .withHostConfig(hostConfig)</span><br><span class="line">                .withAttachStdin(<span class="literal">true</span>)</span><br><span class="line">                .withAttachStderr(<span class="literal">true</span>)</span><br><span class="line">                .withAttachStdout(<span class="literal">true</span>)</span><br><span class="line">                .withTty(<span class="literal">true</span>)</span><br><span class="line">                .exec();</span><br><span class="line">        <span class="keyword">return</span> response.getId();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 启动容器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> containerName 容器名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">startContainer</span><span class="params">(String containerName)</span>&#123;</span><br><span class="line">        dockerClient.startContainerCmd(containerName).exec();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 停止容器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> containerName 容器名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stopContainer</span><span class="params">(String containerName)</span>&#123;</span><br><span class="line">        dockerClient.stopContainerCmd(containerName).exec();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移除容器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> containerName 容器名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeContainer</span><span class="params">(String containerName)</span>&#123;</span><br><span class="line">        dockerClient.removeContainerCmd(containerName).exec();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  创建指令并在容器中执行</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> ProcessOutputMsg <span class="title function_">execCreate</span><span class="params">(String containerId,String[] cmd, <span class="type">long</span> timeout)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="type">ExecCreateCmdResponse</span> <span class="variable">response</span> <span class="operator">=</span> dockerClient.execCreateCmd(containerId)</span><br><span class="line">                .withCmd(cmd)</span><br><span class="line">                .withAttachStderr(<span class="literal">true</span>)</span><br><span class="line">                .withAttachStdin(<span class="literal">true</span>)</span><br><span class="line">                .withAttachStdout(<span class="literal">true</span>)</span><br><span class="line">                .exec();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">execId</span> <span class="operator">=</span> response.getId();</span><br><span class="line">        <span class="type">ProcessOutputMsg</span> <span class="variable">outputMsg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProcessOutputMsg</span>();</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span>[] exitValue = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="type">ExecStartResultCallback</span> <span class="variable">execStartResultCallback</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ExecStartResultCallback</span>()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span>  <span class="keyword">void</span> <span class="title function_">onNext</span><span class="params">(Frame frame)</span>&#123;</span><br><span class="line">                <span class="type">StreamType</span> <span class="variable">streamType</span> <span class="operator">=</span> frame.getStreamType();</span><br><span class="line">                <span class="keyword">try</span> (<span class="type">ByteArrayInputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(frame.getPayload());</span><br><span class="line">                    <span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(inputStream))) &#123;</span><br><span class="line">                    String line;</span><br><span class="line">                    <span class="keyword">while</span> ((line = reader.readLine()) != <span class="literal">null</span>) &#123;</span><br><span class="line">                        sb.append(line);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    System.out.println(e.getMessage());</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (StreamType.STDERR.equals(streamType))&#123;</span><br><span class="line">                    exitValue[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">super</span>.onNext(frame);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onComplete</span><span class="params">()</span> &#123;</span><br><span class="line">                outputMsg.setIsTimeout(<span class="literal">false</span>);</span><br><span class="line">                <span class="built_in">super</span>.onComplete();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">StatsCmd</span> <span class="variable">statsCmd</span> <span class="operator">=</span> dockerClient.statsCmd(containerId);</span><br><span class="line">        ResultCallback&lt;Statistics&gt; callback = statsCmd.exec(<span class="keyword">new</span> <span class="title class_">ResultCallback</span>&lt;Statistics&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onStart</span><span class="params">(Closeable closeable)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onNext</span><span class="params">(Statistics statistics)</span> &#123;</span><br><span class="line">                <span class="type">MemoryStatsConfig</span> <span class="variable">config1</span> <span class="operator">=</span> statistics.getMemoryStats();</span><br><span class="line">                outputMsg.setMemory(config1.getUsage());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onError</span><span class="params">(Throwable throwable)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onComplete</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        statsCmd.exec(callback);</span><br><span class="line">        <span class="type">StopWatch</span> <span class="variable">stopWatch</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StopWatch</span>();</span><br><span class="line">        stopWatch.start();</span><br><span class="line">        dockerClient.execStartCmd(execId)</span><br><span class="line">                .exec(execStartResultCallback)</span><br><span class="line">                .awaitCompletion(timeout, TimeUnit.MILLISECONDS);</span><br><span class="line">        stopWatch.stop();</span><br><span class="line">        outputMsg.setRunningTime(stopWatch.getTotalTimeMillis());</span><br><span class="line">        statsCmd.close();</span><br><span class="line"></span><br><span class="line">        outputMsg.setExitValue(exitValue[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> sb.toString();</span><br><span class="line">        <span class="comment">// 处理输出信息中的换行符</span></span><br><span class="line">        <span class="keyword">if</span> (StrUtil.contains(s,<span class="string">&quot;\\n&quot;</span>))&#123;</span><br><span class="line">            StrUtil.replace(s,<span class="string">&quot;\\n&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (exitValue[<span class="number">0</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">            outputMsg.setErrorMsg(s);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            outputMsg.setSuccessMsg(s);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> outputMsg;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a name="Zc1fs"></a></p>
<h2 id="单体架构改微服务架构"><a href="#单体架构改微服务架构" class="headerlink" title="单体架构改微服务架构"></a>单体架构改微服务架构</h2><ul>
<li><p>引入 nacos 和 gateway</p>
</li>
<li><p>抽取公共模块，如通用方法，全局处理等抽取到 common 模块， 实体类抽取到 model 模块</p>
</li>
<li><p>抽取功能模块，根据项目功能划分对对应的功能进行解耦，本项目中暂时抽取为 User， Question 和 Judge 模块 </p>
</li>
<li><p>编写路由模块 Gateway</p>
</li>
<li><p>新建中间模块（service-client） 用于功能模块之间耦合部分的方法调用</p>
</li>
<li><p>编辑application.yml配置文件,所有需要用到gateway的模块都需要进行配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">xxx-gateway</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">nacos</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">nacos</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">user-service</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://user-service</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/api/user/**</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">question-service</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://question-service</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/api/question/**</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">judge-service</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://judge-service</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/api/judge/**</span></span><br><span class="line">  <span class="attr">main:</span></span><br><span class="line">    <span class="attr">web-application-type:</span> <span class="string">reactive</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8101</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在gateway中添加全局配置和跨域处理</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalAuthFilter</span> <span class="keyword">implements</span> <span class="title class_">GlobalFilter</span>, Ordered &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">AntPathMatcher</span> <span class="variable">antPathMatcher</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AntPathMatcher</span>();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Mono&lt;Void&gt; <span class="title function_">filter</span><span class="params">(ServerWebExchange exchange, GatewayFilterChain chain)</span> &#123;</span><br><span class="line">        <span class="type">ServerHttpRequest</span> <span class="variable">request</span> <span class="operator">=</span> exchange.getRequest();</span><br><span class="line">        <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> request.getURI().getPath();</span><br><span class="line">        <span class="comment">//判断路径中是否存在inner</span></span><br><span class="line">        <span class="keyword">if</span> (antPathMatcher.match(<span class="string">&quot;/**/inner/**&quot;</span>, path))&#123;</span><br><span class="line">            <span class="type">ServerHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> exchange.getResponse();</span><br><span class="line">            response.setStatusCode(HttpStatus.FORBIDDEN);</span><br><span class="line">            <span class="type">DataBufferFactory</span> <span class="variable">factory</span> <span class="operator">=</span> response.bufferFactory();</span><br><span class="line">            <span class="type">DataBuffer</span> <span class="variable">dataBuffer</span> <span class="operator">=</span> factory.wrap(<span class="string">&quot;无权限&quot;</span>.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">            <span class="keyword">return</span> response.writeWith(Mono.just(dataBuffer));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> chain.filter(exchange);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getOrder</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CorsConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CorsWebFilter <span class="title function_">corsWebFilter</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">CorsConfiguration</span> <span class="variable">corsConfiguration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CorsConfiguration</span>();</span><br><span class="line">        corsConfiguration.addAllowedMethod(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">// 是否允许携带cookie跨域</span></span><br><span class="line">        corsConfiguration.setAllowCredentials(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// todo 允许跨域的来源:实际上线时限定可以跨域访问的网址为本地和前端域名</span></span><br><span class="line">        corsConfiguration.setAllowedOriginPatterns(List.of(<span class="string">&quot;*&quot;</span>));</span><br><span class="line">        corsConfiguration.addAllowedHeader(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">//基于url跨域，选择reactive包下的</span></span><br><span class="line">        <span class="type">UrlBasedCorsConfigurationSource</span> <span class="variable">source</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UrlBasedCorsConfigurationSource</span>(<span class="keyword">new</span> <span class="title class_">PathPatternParser</span>());</span><br><span class="line">        source.registerCorsConfiguration(<span class="string">&quot;/**&quot;</span>, corsConfiguration);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CorsWebFilter</span>(source);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a name="Xc5Ti"></a></p>
</li>
</ul>
<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><ol>
<li><p>使用redis缓存session时，关于 spring.session.store-type 属性的一个问题</p>
<blockquote>
<p>SpringBoot 3 导入相关依赖后，默认使用Redis缓存session,该配置项已被弃置<br />相关链接：<br><a href="https://github.com/spring-projects/spring-boot/issues/27738">https://github.com/spring-projects/spring-boot/issues/27738</a><br><a href="https://github.com/spring-projects/spring-boot/issues/27756">https://github.com/spring-projects/spring-boot/issues/27756</a><br /><a href="https://github.com/spring-projects/spring-session/issues/2459">https://github.com/spring-projects/spring-session/issues/2459</a>	</p>
</blockquote>
</li>
<li><p>Docker主要使用Linux Namespace 和 Cgroup进行容器环境隔离和资源控制，相关资料链接：</p>
<blockquote>
<p>Namespace：<br><a href="https://www.cnblogs.com/sally-zhou/p/13398260.html">https://www.cnblogs.com/sally-zhou/p/13398260.html</a><br>Cgroups<br><a href="https://zhuanlan.zhihu.com/p/388101355">https://zhuanlan.zhihu.com/p/388101355</a><br><a href="https://blog.csdn.net/weixin_47465999/article/details/130454716">https://blog.csdn.net/weixin_47465999&#x2F;article&#x2F;details&#x2F;130454716</a></p>
</blockquote>
</li>
<li><p>部署到服务器时可能会出现代码编译失败的问题</p>
<blockquote>
<p>可能的原因：<br>1、权限不足：使用Runtime.getRuntime().exec()执行编译命令时，对传入的命令进行处理<br>String[] cmd &#x3D; {“&#x2F;bin&#x2F;bash”, “-c”, “javac -source 1.8 -target 1.8 -encoding utf-8 filepath”}<br>2、服务器java环境为java8，指定编译版本时使用 -source 1.8 -target 1.8 不要使用  –release 8 ，后者是在java9 新加入的命令。</p>
</blockquote>
</li>
</ol>
<p>java17版本的javac -help内容用法: javac <options> <source files><br />其中, 可能的选项包括:<br />  @<filename>                  从文件读取选项和文件名<br />  -Akey[&#x3D;value]                传递给注释处理程序的选项<br />  –add-modules &lt;模块&gt;(,&lt;模块&gt;)<em><br />        除了初始模块之外要解析的根模块; 如果 <module><br />                为 ALL-MODULE-PATH, 则为模块路径中的所有模块。<br />  –boot-class-path <path>, -bootclasspath <path><br />        覆盖引导类文件的位置<br />  –class-path <path>, -classpath <path>, -cp <path><br />        指定查找用户类文件和注释处理程序的位置<br />  -d <directory>               指定放置生成的类文件的位置<br />  -deprecation                 输出使用已过时的 API 的源位置<br />  –enable-preview             启用预览语言功能。要与 -source 或 –release 一起使用。<br />  -encoding <encoding>         指定源文件使用的字符编码<br />  -endorseddirs <dirs>         覆盖签名的标准路径的位置<br />  -extdirs <dirs>              覆盖所安装扩展的位置<br />  -g                           生成所有调试信息<br />  -g:{lines,vars,source}       只生成某些调试信息<br />  -g:none                      不生成任何调试信息<br />  -h <directory>               指定放置生成的本机标头文件的位置<br />  –help, -help, -?            输出此帮助消息<br />  –help-extra, -X             输出额外选项的帮助<br />  -implicit:{none,class}       指定是否为隐式引用文件生成类文件<br />  -J<flag>                     直接将 &lt;标记&gt; 传递给运行时系统<br />  –limit-modules &lt;模块&gt;(,&lt;模块&gt;)</em><br />        限制可观察模块的领域<br />  –module &lt;模块&gt;(,&lt;模块&gt;)<em>, -m &lt;模块&gt;(,&lt;模块&gt;)</em><br />        只编译指定的模块，请检查时间戳<br />  –module-path <path>, -p <path><br />        指定查找应用程序模块的位置<br />  –module-source-path <module-source-path><br />        指定查找多个模块的输入源文件的位置<br />  –module-version &lt;版本&gt;        指定正在编译的模块版本<br />  -nowarn                      不生成任何警告<br />  -parameters                  生成元数据以用于方法参数的反射<br />  -proc:{none,only}            控制是否执行注释处理和&#x2F;或编译。<br />  -processor <class1>[,<class2>,<class3>…]<br />        要运行的注释处理程序的名称; 绕过默认的搜索进程<br />  –processor-module-path <path><br />        指定查找注释处理程序的模块路径<br />  –processor-path <path>, -processorpath <path><br />        指定查找注释处理程序的位置<br />  -profile <profile>           请确保使用的 API 在指定的配置文件中可用<br />  –release <release><br />        为指定的 Java SE 发行版编译。支持的发行版：7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17<br />  -s <directory>               指定放置生成的源文件的位置<br />  –source <release>, -source <release><br />        提供与指定的 Java SE 发行版的源兼容性。支持的发行版：7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17<br />  –source-path <path>, -sourcepath <path><br />        指定查找输入源文件的位置<br />  –system <jdk>|none          覆盖系统模块位置<br />  –target <release>, -target <release><br />        生成适合指定的 Java SE 发行版的类文件。支持的发行版：7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17<br />  –upgrade-module-path <path><br />        覆盖可升级模块位置<br />  -verbose                     输出有关编译器正在执行的操作的消息<br />  –version, -version          版本信息<br />  -Werror                      出现警告时终止编译</p>
]]></content>
  </entry>
</search>
